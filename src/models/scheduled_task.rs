/*
 * Trend Micro Workload Security API
 *
 * Copyright 2018 - 2022 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Workload Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Workload Security into your CI/CD pipeline.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 50.0.827
 * 
 * Generated by: https://openapi-generator.tech
 */

/// ScheduledTask : Defines a scheduled task. Scheduled tasks automatically perform specific Deep Security Manager tasks on a schedule.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ScheduledTask {
    /// Name of scheduled task. Searchable as String.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Type of scheduled task. Searchable as Choice.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<Type>,
    #[serde(rename = "scheduleDetails", skip_serializing_if = "Option::is_none")]
    pub schedule_details: Option<Box<crate::models::ScheduleDetails>>,
    /// Indicates whether or not the scheduled task is enabled. Searchable as Boolean.
    #[serde(rename = "enabled", skip_serializing_if = "Option::is_none")]
    pub enabled: Option<bool>,
    /// The last time this scheduled task was run, or null if never run. Searchable as Date.
    #[serde(rename = "lastRunTime", skip_serializing_if = "Option::is_none")]
    pub last_run_time: Option<i64>,
    /// The next time this scheduled task is scheduled to run, or null if it not scheduled to run in the future. Searchable as Date.
    #[serde(rename = "nextRunTime", skip_serializing_if = "Option::is_none")]
    pub next_run_time: Option<i64>,
    /// Indicates that the scheduled task should execute immediately.
    #[serde(rename = "runNow", skip_serializing_if = "Option::is_none")]
    pub run_now: Option<bool>,
    #[serde(rename = "scanForOpenPortsTaskParameters", skip_serializing_if = "Option::is_none")]
    pub scan_for_open_ports_task_parameters: Option<Box<crate::models::ScanForOpenPortsTaskParameters>>,
    #[serde(rename = "sendAlertSummaryTaskParameters", skip_serializing_if = "Option::is_none")]
    pub send_alert_summary_task_parameters: Option<Box<crate::models::SendAlertSummaryTaskParameters>>,
    #[serde(rename = "discoverComputersTaskParameters", skip_serializing_if = "Option::is_none")]
    pub discover_computers_task_parameters: Option<Box<crate::models::DiscoverComputersTaskParameters>>,
    #[serde(rename = "runScriptTaskParameters", skip_serializing_if = "Option::is_none")]
    pub run_script_task_parameters: Option<Box<crate::models::RunScriptTaskParameters>>,
    #[serde(rename = "sendPolicyTaskParameters", skip_serializing_if = "Option::is_none")]
    pub send_policy_task_parameters: Option<Box<crate::models::SendPolicyTaskParameters>>,
    #[serde(rename = "generateReportTaskParameters", skip_serializing_if = "Option::is_none")]
    pub generate_report_task_parameters: Option<Box<crate::models::GenerateReportTaskParameters>>,
    #[serde(rename = "synchronizeDirectoryTaskParameters", skip_serializing_if = "Option::is_none")]
    pub synchronize_directory_task_parameters: Option<Box<crate::models::SynchronizeDirectoryTaskParameters>>,
    #[serde(rename = "scanForRecommendationsTaskParameters", skip_serializing_if = "Option::is_none")]
    pub scan_for_recommendations_task_parameters: Option<Box<crate::models::ScanForRecommendationsTaskParameters>>,
    #[serde(rename = "synchronizeVCenterTaskParameters", skip_serializing_if = "Option::is_none")]
    pub synchronize_v_center_task_parameters: Option<Box<crate::models::SynchronizeVCenterTaskParameters>>,
    #[serde(rename = "scanForIntegrityChangesTaskParameters", skip_serializing_if = "Option::is_none")]
    pub scan_for_integrity_changes_task_parameters: Option<Box<crate::models::ScanForIntegrityChangesTaskParameters>>,
    #[serde(rename = "scanForMalwareTaskParameters", skip_serializing_if = "Option::is_none")]
    pub scan_for_malware_task_parameters: Option<Box<crate::models::ScanForMalwareTaskParameters>>,
    #[serde(rename = "checkForSecurityUpdatesTaskParameters", skip_serializing_if = "Option::is_none")]
    pub check_for_security_updates_task_parameters: Option<Box<crate::models::CheckForSecurityUpdatesTaskParameters>>,
    #[serde(rename = "synchronizeCloudAccountTaskParameters", skip_serializing_if = "Option::is_none")]
    pub synchronize_cloud_account_task_parameters: Option<Box<crate::models::SynchronizeCloudAccountTaskParameters>>,
    #[serde(rename = "updateSuspiciousObjectsListTaskParameters", skip_serializing_if = "Option::is_none")]
    pub update_suspicious_objects_list_task_parameters: Option<Box<crate::models::UpdateSuspiciousObjectsListTaskParameters>>,
    /// Scheduled task identifier. Searchable as ID.
    #[serde(rename = "ID", skip_serializing_if = "Option::is_none")]
    pub ID: Option<i32>,
}

impl ScheduledTask {
    /// Defines a scheduled task. Scheduled tasks automatically perform specific Deep Security Manager tasks on a schedule.
    pub fn new() -> ScheduledTask {
        ScheduledTask {
            name: None,
            _type: None,
            schedule_details: None,
            enabled: None,
            last_run_time: None,
            next_run_time: None,
            run_now: None,
            scan_for_open_ports_task_parameters: None,
            send_alert_summary_task_parameters: None,
            discover_computers_task_parameters: None,
            run_script_task_parameters: None,
            send_policy_task_parameters: None,
            generate_report_task_parameters: None,
            synchronize_directory_task_parameters: None,
            scan_for_recommendations_task_parameters: None,
            synchronize_v_center_task_parameters: None,
            scan_for_integrity_changes_task_parameters: None,
            scan_for_malware_task_parameters: None,
            check_for_security_updates_task_parameters: None,
            synchronize_cloud_account_task_parameters: None,
            update_suspicious_objects_list_task_parameters: None,
            ID: None,
        }
    }
}

/// Type of scheduled task. Searchable as Choice.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "scan-for-open-ports")]
    ScanForOpenPorts,
    #[serde(rename = "send-alert-summary")]
    SendAlertSummary,
    #[serde(rename = "discover-computers")]
    DiscoverComputers,
    #[serde(rename = "run-script")]
    RunScript,
    #[serde(rename = "send-policy")]
    SendPolicy,
    #[serde(rename = "generate-report")]
    GenerateReport,
    #[serde(rename = "synchronize-directory")]
    SynchronizeDirectory,
    #[serde(rename = "synchronize-users")]
    SynchronizeUsers,
    #[serde(rename = "scan-for-recommendations")]
    ScanForRecommendations,
    #[serde(rename = "synchronize-vcenter")]
    SynchronizeVcenter,
    #[serde(rename = "scan-for-integrity-changes")]
    ScanForIntegrityChanges,
    #[serde(rename = "scan-for-malware")]
    ScanForMalware,
    #[serde(rename = "check-for-security-updates")]
    CheckForSecurityUpdates,
    #[serde(rename = "synchronize-cloud-account")]
    SynchronizeCloudAccount,
    #[serde(rename = "check-for-software-updates")]
    CheckForSoftwareUpdates,
    #[serde(rename = "update-suspicious-objects-list")]
    UpdateSuspiciousObjectsList,
}

