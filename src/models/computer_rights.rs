/*
 * Trend Micro Workload Security API
 *
 * Copyright 2018 - 2022 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Workload Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Workload Security into your CI/CD pipeline.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 50.0.827
 *
 * Generated by: https://openapi-generator.tech
 */

/// ComputerRights : Computer right details.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ComputerRights {
    /// Right to add and remove computer groups.
    #[serde(
        rename = "canAddAndRemoveComputerGroups",
        skip_serializing_if = "Option::is_none"
    )]
    pub can_add_and_remove_computer_groups: Option<bool>,
    /// Right to create new computers.
    #[serde(
        rename = "canCreateNewComputers",
        skip_serializing_if = "Option::is_none"
    )]
    pub can_create_new_computers: Option<bool>,
    /// Right to delete computers.
    #[serde(rename = "canDeleteComputers", skip_serializing_if = "Option::is_none")]
    pub can_delete_computers: Option<bool>,
    /// Right to dismiss computer alerts.
    #[serde(rename = "canDismissAlerts", skip_serializing_if = "Option::is_none")]
    pub can_dismiss_alerts: Option<bool>,
    /// Right to edit computer properties.
    #[serde(
        rename = "canEditComputerProperties",
        skip_serializing_if = "Option::is_none"
    )]
    pub can_edit_computer_properties: Option<bool>,
    /// Right to import computers.
    #[serde(rename = "canImportComputers", skip_serializing_if = "Option::is_none")]
    pub can_import_computers: Option<bool>,
    /// Right to manage cloud accounts.
    #[serde(
        rename = "canManageCloudAccounts",
        skip_serializing_if = "Option::is_none"
    )]
    pub can_manage_cloud_accounts: Option<bool>,
    /// Right to manage directories.
    #[serde(
        rename = "canManageDirectories",
        skip_serializing_if = "Option::is_none"
    )]
    pub can_manage_directories: Option<bool>,
    /// Right to manage VMware vCenters.
    #[serde(rename = "canManageVCenters", skip_serializing_if = "Option::is_none")]
    pub can_manage_v_centers: Option<bool>,
    /// Right to tag computers.
    #[serde(rename = "canTagComputers", skip_serializing_if = "Option::is_none")]
    pub can_tag_computers: Option<bool>,
    /// Right to view events and alerts not related to computers.
    #[serde(
        rename = "canViewNotRelatedToComputers",
        skip_serializing_if = "Option::is_none"
    )]
    pub can_view_not_related_to_computers: Option<bool>,
    /// Right to view non-selected computers.
    #[serde(
        rename = "canViewOtherComputers",
        skip_serializing_if = "Option::is_none"
    )]
    pub can_view_other_computers: Option<bool>,
}

impl ComputerRights {
    /// Computer right details.
    pub fn new() -> ComputerRights {
        ComputerRights {
            can_add_and_remove_computer_groups: None,
            can_create_new_computers: None,
            can_delete_computers: None,
            can_dismiss_alerts: None,
            can_edit_computer_properties: None,
            can_import_computers: None,
            can_manage_cloud_accounts: None,
            can_manage_directories: None,
            can_manage_v_centers: None,
            can_tag_computers: None,
            can_view_not_related_to_computers: None,
            can_view_other_computers: None,
        }
    }
}
