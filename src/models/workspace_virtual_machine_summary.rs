/*
 * Trend Micro Workload Security API
 *
 * Copyright 2018 - 2022 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Workload Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Workload Security into your CI/CD pipeline.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 50.0.827
 *
 * Generated by: https://openapi-generator.tech
 */

/// WorkspaceVirtualMachineSummary : Details of an AWS Workspace.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct WorkspaceVirtualMachineSummary {
    /// Cloud provider: \"AWS\".
    #[serde(rename = "cloudProvider", skip_serializing_if = "Option::is_none")]
    pub cloud_provider: Option<String>,
    /// Account ID. Searchable as String.
    #[serde(rename = "accountID", skip_serializing_if = "Option::is_none")]
    pub account_id: Option<String>,
    /// Name of workspace directory.
    #[serde(rename = "workspaceDirectory", skip_serializing_if = "Option::is_none")]
    pub workspace_directory: Option<String>,
    /// Name of workspace owner. Searchable as String.
    #[serde(rename = "userName", skip_serializing_if = "Option::is_none")]
    pub user_name: Option<String>,
    /// Workspace ID, for example: \"ws-hlt453cld\". Searchable as String.
    #[serde(rename = "workspaceID", skip_serializing_if = "Option::is_none")]
    pub workspace_id: Option<String>,
    /// Bundle ID, for example: \"wsb-92b9h49ds\". Searchable as String.
    #[serde(rename = "bundleID", skip_serializing_if = "Option::is_none")]
    pub bundle_id: Option<String>,
    /// Hardware description, for example: \"STANDARD\". Searchable as String.
    #[serde(rename = "workspaceHardware", skip_serializing_if = "Option::is_none")]
    pub workspace_hardware: Option<String>,
    /// Power state, for example, \"POWER ON\".
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    /// List of name/value metadata pairs.
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Vec<crate::models::VirtualMachineMetadata>>,
    #[serde(rename = "IPAddress", skip_serializing_if = "Option::is_none")]
    pub ip_address: Option<String>,
}

impl WorkspaceVirtualMachineSummary {
    /// Details of an AWS Workspace.
    pub fn new() -> WorkspaceVirtualMachineSummary {
        WorkspaceVirtualMachineSummary {
            cloud_provider: None,
            account_id: None,
            workspace_directory: None,
            user_name: None,
            workspace_id: None,
            bundle_id: None,
            workspace_hardware: None,
            state: None,
            metadata: None,
            ip_address: None,
        }
    }
}
