/*
 * Trend Micro Workload Security API
 *
 * Copyright 2018 - 2022 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Workload Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Workload Security into your CI/CD pipeline.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 50.0.827
 * 
 * Generated by: https://openapi-generator.tech
 */

/// AzureConnector : Defines an Azure Cloud Connector that is used to retrieve information from Azure.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct AzureConnector {
    /// The Azure Connector's display name in DSM. Searchable as String.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The Azure Tenant/Active Directory ID. Searchable as String.
    #[serde(rename = "azureTenantID", skip_serializing_if = "Option::is_none")]
    pub azure_tenant_id: Option<String>,
    /// The Azure Subscription ID. Searchable as String.
    #[serde(rename = "subscriptionID", skip_serializing_if = "Option::is_none")]
    pub subscription_id: Option<String>,
    /// The Azure Active Directory Application ID. Searchable as String.
    #[serde(rename = "azureAdApplicationID", skip_serializing_if = "Option::is_none")]
    pub azure_ad_application_id: Option<String>,
    /// The Azure Active Directory Application secret/password. Not present in returned objects.
    #[serde(rename = "azureAdApplicationSecret", skip_serializing_if = "Option::is_none")]
    pub azure_ad_application_secret: Option<String>,
    /// The optional Azure Resource REST API endpoint. Will auto detect by DSM VM location if not provided. This is an advanced option used if you want to access private or confidential cloud. Be aware that managing Azure Government computers outside Azure Government would break ITAR compliance.
    #[serde(rename = "resourceApiEndPoint", skip_serializing_if = "Option::is_none")]
    pub resource_api_end_point: Option<String>,
    /// The optional Azure Active Directory Login/Authentication API endpoint. Will auto detect by DSM VM location if not provided. This is an advanced option used if you want to access private or confidential cloud. Be aware that managing Azure Government computers outside Azure Government would break ITAR compliance.
    #[serde(rename = "loginApiEndPoint", skip_serializing_if = "Option::is_none")]
    pub login_api_end_point: Option<String>,
    /// Timestamp of the last time the Azure Connector was successfully synchronized, in milliseconds since epoch.
    #[serde(rename = "lastSyncTime", skip_serializing_if = "Option::is_none")]
    pub last_sync_time: Option<i64>,
    /// Azure Connector ID. Searchable as ID.
    #[serde(rename = "ID", skip_serializing_if = "Option::is_none")]
    pub ID: Option<i32>,
}

impl AzureConnector {
    /// Defines an Azure Cloud Connector that is used to retrieve information from Azure.
    pub fn new() -> AzureConnector {
        AzureConnector {
            name: None,
            azure_tenant_id: None,
            subscription_id: None,
            azure_ad_application_id: None,
            azure_ad_application_secret: None,
            resource_api_end_point: None,
            login_api_end_point: None,
            last_sync_time: None,
            ID: None,
        }
    }
}


