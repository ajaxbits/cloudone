/*
 * Trend Micro Workload Security API
 *
 * Copyright 2018 - 2022 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Workload Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Workload Security into your CI/CD pipeline.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 50.0.827
 * 
 * Generated by: https://openapi-generator.tech
 */

/// Ec2VirtualMachineSummary : Details of an AWS EC2 virtual machine.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Ec2VirtualMachineSummary {
    /// Cloud provider: \"AWS\".
    #[serde(rename = "cloudProvider", skip_serializing_if = "Option::is_none")]
    pub cloud_provider: Option<String>,
    /// Account ID. Searchable as String.
    #[serde(rename = "accountID", skip_serializing_if = "Option::is_none")]
    pub account_id: Option<String>,
    /// Operating system, for example: \"Microsoft Windows (64 bit)\". Searchable as String.
    #[serde(rename = "operatingSystem", skip_serializing_if = "Option::is_none")]
    pub operating_system: Option<String>,
    /// Private IP address. Searchable as String.
    #[serde(rename = "privateIPAddress", skip_serializing_if = "Option::is_none")]
    pub private_ip_address: Option<String>,
    /// Public IP address. Searchable as String.
    #[serde(rename = "publicIPAddress", skip_serializing_if = "Option::is_none")]
    pub public_ip_address: Option<String>,
    /// Availability Zone, for example: \"us-east-1a\". Searchable as String.
    #[serde(rename = "availabilityZone", skip_serializing_if = "Option::is_none")]
    pub availability_zone: Option<String>,
    /// Instance ID, for example: \"i-0e80f75f9532ad1ba\". Searchable as String.
    #[serde(rename = "instanceID", skip_serializing_if = "Option::is_none")]
    pub instance_id: Option<String>,
    /// List of security groups.
    #[serde(rename = "securityGroups", skip_serializing_if = "Option::is_none")]
    pub security_groups: Option<Vec<crate::models::VirtualMachineSecurityGroup>>,
    /// Instance type, for example: \"t2.micro\". Searchable as String.
    #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
    pub _type: Option<String>,
    /// Virtualization type, for example: \"hvm\". Searchable as String.
    #[serde(rename = "virtualizationType", skip_serializing_if = "Option::is_none")]
    pub virtualization_type: Option<String>,
    /// Power state, for example, \"POWER ON\".
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    /// List of name/value metadata pairs.
    #[serde(rename = "metadata", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Vec<crate::models::VirtualMachineMetadata>>,
    #[serde(rename = "DNSName", skip_serializing_if = "Option::is_none")]
    pub dns_name: Option<String>,
    #[serde(rename = "amiID", skip_serializing_if = "Option::is_none")]
    pub ami_id: Option<String>,
}

impl Ec2VirtualMachineSummary {
    /// Details of an AWS EC2 virtual machine.
    pub fn new() -> Ec2VirtualMachineSummary {
        Ec2VirtualMachineSummary {
            cloud_provider: None,
            account_id: None,
            operating_system: None,
            private_ip_address: None,
            public_ip_address: None,
            availability_zone: None,
            instance_id: None,
            security_groups: None,
            _type: None,
            virtualization_type: None,
            state: None,
            metadata: None,
            dns_name: None,
            ami_id: None,
        }
    }
}


