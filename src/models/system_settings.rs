/*
 * Trend Micro Workload Security API
 *
 * Copyright 2018 - 2022 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Workload Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Workload Security into your CI/CD pipeline.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 50.0.827
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct SystemSettings {
    #[serde(rename = "platformSettingSamlIdentityProviderCertificateExpiryWarningDays", skip_serializing_if = "Option::is_none")]
    pub platform_setting_saml_identity_provider_certificate_expiry_warning_days: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUpdateAgentSecurityOnMissingDeepSecurityManagerEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_update_agent_security_on_missing_deep_security_manager_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingDdanManualSourceServerUrl", skip_serializing_if = "Option::is_none")]
    pub platform_setting_ddan_manual_source_server_url: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingSmartProtectionFeedbackThreatDetectionsThreshold", skip_serializing_if = "Option::is_none")]
    pub platform_setting_smart_protection_feedback_threat_detections_threshold: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "intrusionPreventionSettingEventRankSeverityFilterMedium", skip_serializing_if = "Option::is_none")]
    pub intrusion_prevention_setting_event_rank_severity_filter_medium: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "firewallSettingIntranetConnectivityTestExpectedContentRegex", skip_serializing_if = "Option::is_none")]
    pub firewall_setting_intranet_connectivity_test_expected_content_regex: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingEventForwardingSnsEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_event_forwarding_sns_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingTenantAutoRevokeImpersonationByPrimaryTenantTimeout", skip_serializing_if = "Option::is_none")]
    pub platform_setting_tenant_auto_revoke_impersonation_by_primary_tenant_timeout: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "webReputationSettingEventRankRiskBlockedByAdministratorRank", skip_serializing_if = "Option::is_none")]
    pub web_reputation_setting_event_rank_risk_blocked_by_administrator_rank: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "antiMalwareSettingEventEmailRecipients", skip_serializing_if = "Option::is_none")]
    pub anti_malware_setting_event_email_recipients: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "firewallSettingIntranetConnectivityTestUrl", skip_serializing_if = "Option::is_none")]
    pub firewall_setting_intranet_connectivity_test_url: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingTenantUseDefaultRelayGroupFromPrimaryTenantEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_tenant_use_default_relay_group_from_primary_tenant_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingExportedDiagnosticPackageLocale", skip_serializing_if = "Option::is_none")]
    pub platform_setting_exported_diagnostic_package_locale: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "intrusionPreventionSettingEventRankSeverityFilterCritical", skip_serializing_if = "Option::is_none")]
    pub intrusion_prevention_setting_event_rank_severity_filter_critical: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingTrendMicroXdrCommonLogReceiverUrl", skip_serializing_if = "Option::is_none")]
    pub platform_setting_trend_micro_xdr_common_log_receiver_url: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingManagedDetectResponseCompanyGuid", skip_serializing_if = "Option::is_none")]
    pub platform_setting_managed_detect_response_company_guid: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingAlertDefaultEmailAddress", skip_serializing_if = "Option::is_none")]
    pub platform_setting_alert_default_email_address: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingAgentInitiatedActivationReactivateClonedEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_agent_initiated_activation_reactivate_cloned_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingManagedDetectResponseServerUrl", skip_serializing_if = "Option::is_none")]
    pub platform_setting_managed_detect_response_server_url: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingSyslogConfigId", skip_serializing_if = "Option::is_none")]
    pub platform_setting_syslog_config_id: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingSmtpStartTlsEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_smtp_start_tls_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUserPasswordRequireLettersAndNumbersEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_user_password_require_letters_and_numbers_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingManagedDetectResponseEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_managed_detect_response_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUpdateRulesPolicyAutoApplyEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_update_rules_policy_auto_apply_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUserPasswordRequireNotSameAsUsernameEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_user_password_require_not_same_as_username_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "logInspectionSettingEventRankSeverityMedium", skip_serializing_if = "Option::is_none")]
    pub log_inspection_setting_event_rank_severity_medium: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "antiMalwareSettingRetainEventDuration", skip_serializing_if = "Option::is_none")]
    pub anti_malware_setting_retain_event_duration: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUpdateAgentSecurityContactPrimarySourceOnMissingRelayEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_update_agent_security_contact_primary_source_on_missing_relay_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "firewallSettingEventRankSeverityLogOnly", skip_serializing_if = "Option::is_none")]
    pub firewall_setting_event_rank_severity_log_only: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "applicationControlSettingRetainEventDuration", skip_serializing_if = "Option::is_none")]
    pub application_control_setting_retain_event_duration: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingWindowsUpgradeOnActivationEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_windows_upgrade_on_activation_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingSystemEventForwardingSnmpPort", skip_serializing_if = "Option::is_none")]
    pub platform_setting_system_event_forwarding_snmp_port: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "firewallSettingEventRankSeverityDeny", skip_serializing_if = "Option::is_none")]
    pub firewall_setting_event_rank_severity_deny: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "intrusionPreventionSettingEventRankSeverityFilterLow", skip_serializing_if = "Option::is_none")]
    pub intrusion_prevention_setting_event_rank_severity_filter_low: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingManagedDetectResponseServiceToken", skip_serializing_if = "Option::is_none")]
    pub platform_setting_managed_detect_response_service_token: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingTrendMicroXdrApiUser", skip_serializing_if = "Option::is_none")]
    pub platform_setting_trend_micro_xdr_api_user: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "logInspectionSettingRetainEventDuration", skip_serializing_if = "Option::is_none")]
    pub log_inspection_setting_retain_event_duration: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingTenantAutoRevokeImpersonationByPrimaryTenantEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_tenant_auto_revoke_impersonation_by_primary_tenant_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "antiMalwareSettingEventEmailBodyTemplate", skip_serializing_if = "Option::is_none")]
    pub anti_malware_setting_event_email_body_template: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingRetainSecurityUpdatesMax", skip_serializing_if = "Option::is_none")]
    pub platform_setting_retain_security_updates_max: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingConnectedThreatDefenseControlManagerSourceOption", skip_serializing_if = "Option::is_none")]
    pub platform_setting_connected_threat_defense_control_manager_source_option: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "antiMalwareSettingEventEmailEnabled", skip_serializing_if = "Option::is_none")]
    pub anti_malware_setting_event_email_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingRecommendationOngoingScansEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_recommendation_ongoing_scans_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUserPasswordLengthMin", skip_serializing_if = "Option::is_none")]
    pub platform_setting_user_password_length_min: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingAwsManagerIdentityUseInstanceRoleEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_aws_manager_identity_use_instance_role_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingAlertAgentUpdatePendingThreshold", skip_serializing_if = "Option::is_none")]
    pub platform_setting_alert_agent_update_pending_threshold: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUserPasswordRequireSpecialCharactersEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_user_password_require_special_characters_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUpdateApplianceDefaultAgentVersion", skip_serializing_if = "Option::is_none")]
    pub platform_setting_update_appliance_default_agent_version: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingSystemEventForwardingSnmpEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_system_event_forwarding_snmp_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingSmtpBounceEmailAddress", skip_serializing_if = "Option::is_none")]
    pub platform_setting_smtp_bounce_email_address: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUpdateRelaySecuritySupportAgent9AndEarlierEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_update_relay_security_support_agent9_and_earlier_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingManagedDetectResponseProxyId", skip_serializing_if = "Option::is_none")]
    pub platform_setting_managed_detect_response_proxy_id: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingTrendMicroXdrLogServerUrl", skip_serializing_if = "Option::is_none")]
    pub platform_setting_trend_micro_xdr_log_server_url: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingInactiveAgentCleanupEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_inactive_agent_cleanup_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUserSessionIdleTimeout", skip_serializing_if = "Option::is_none")]
    pub platform_setting_user_session_idle_timeout: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "antiMalwareSettingEventEmailSubject", skip_serializing_if = "Option::is_none")]
    pub anti_malware_setting_event_email_subject: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingConnectedThreatDefenseControlManagerUseProxyEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_connected_threat_defense_control_manager_use_proxy_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingAwsManagerIdentityAccessKey", skip_serializing_if = "Option::is_none")]
    pub platform_setting_aws_manager_identity_access_key: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingConnectedThreatDefenseControlManagerProxyId", skip_serializing_if = "Option::is_none")]
    pub platform_setting_connected_threat_defense_control_manager_proxy_id: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingTrendMicroXdrRegistrationState", skip_serializing_if = "Option::is_none")]
    pub platform_setting_trend_micro_xdr_registration_state: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingTenantAllowImpersonationByPrimaryTenantEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_tenant_allow_impersonation_by_primary_tenant_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingConnectedThreatDefenseControlManagerManualSourceServerUrl", skip_serializing_if = "Option::is_none")]
    pub platform_setting_connected_threat_defense_control_manager_manual_source_server_url: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUserPasswordRequireMixedCaseEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_user_password_require_mixed_case_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingTrendMicroXdrIdentityProviderApiUrl", skip_serializing_if = "Option::is_none")]
    pub platform_setting_trend_micro_xdr_identity_provider_api_url: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingSmartProtectionFeedbackForSuspiciousFileEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_smart_protection_feedback_for_suspicious_file_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingSmartProtectionFeedbackIndustryType", skip_serializing_if = "Option::is_none")]
    pub platform_setting_smart_protection_feedback_industry_type: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "webReputationSettingRetainEventDuration", skip_serializing_if = "Option::is_none")]
    pub web_reputation_setting_retain_event_duration: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingEnableAgentAutoDetectOsProxy", skip_serializing_if = "Option::is_none")]
    pub platform_setting_enable_agent_auto_detect_os_proxy: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "integrityMonitoringSettingEventRankSeverityMedium", skip_serializing_if = "Option::is_none")]
    pub integrity_monitoring_setting_event_rank_severity_medium: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingVisionOneThreatIntelligenceEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_vision_one_threat_intelligence_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUpdateRelaySecurityAllRegionsPatternsDownloadEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_update_relay_security_all_regions_patterns_download_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingDdanSubmissionEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_ddan_submission_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "webReputationSettingEventRankRiskSuspicious", skip_serializing_if = "Option::is_none")]
    pub web_reputation_setting_event_rank_risk_suspicious: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "integrityMonitoringSettingEventRankSeverityCritical", skip_serializing_if = "Option::is_none")]
    pub integrity_monitoring_setting_event_rank_severity_critical: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingSmtpFromEmailAddress", skip_serializing_if = "Option::is_none")]
    pub platform_setting_smtp_from_email_address: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "firewallSettingGlobalStatefulConfigId", skip_serializing_if = "Option::is_none")]
    pub firewall_setting_global_stateful_config_id: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingEventForwardingSnsTopicArn", skip_serializing_if = "Option::is_none")]
    pub platform_setting_event_forwarding_sns_topic_arn: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "firewallSettingInternetConnectivityTestExpectedContentRegex", skip_serializing_if = "Option::is_none")]
    pub firewall_setting_internet_connectivity_test_expected_content_regex: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingConnectedThreatDefenseControlManagerManualSourceApiKey", skip_serializing_if = "Option::is_none")]
    pub platform_setting_connected_threat_defense_control_manager_manual_source_api_key: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUpdateSecurityPrimarySourceMode", skip_serializing_if = "Option::is_none")]
    pub platform_setting_update_security_primary_source_mode: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "webReputationSettingEventRankRiskDangerous", skip_serializing_if = "Option::is_none")]
    pub web_reputation_setting_event_rank_risk_dangerous: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUserHideUnlicensedModulesEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_user_hide_unlicensed_modules_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingCaptureEncryptedTrafficEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_capture_encrypted_traffic_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingRetainSystemEventDuration", skip_serializing_if = "Option::is_none")]
    pub platform_setting_retain_system_event_duration: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUserPasswordExpiry", skip_serializing_if = "Option::is_none")]
    pub platform_setting_user_password_expiry: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingSmartProtectionFeedbackEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_smart_protection_feedback_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "integrityMonitoringSettingRetainEventDuration", skip_serializing_if = "Option::is_none")]
    pub integrity_monitoring_setting_retain_event_duration: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "logInspectionSettingEventRankSeverityCritical", skip_serializing_if = "Option::is_none")]
    pub log_inspection_setting_event_rank_severity_critical: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingDdanProxyId", skip_serializing_if = "Option::is_none")]
    pub platform_setting_ddan_proxy_id: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingAgentInitiatedActivationWithinIpListId", skip_serializing_if = "Option::is_none")]
    pub platform_setting_agent_initiated_activation_within_ip_list_id: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUpdateSecurityPrimarySourceUrl", skip_serializing_if = "Option::is_none")]
    pub platform_setting_update_security_primary_source_url: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingAgentlessVcloudProtectionEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_agentless_vcloud_protection_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingLinuxUpgradeOnActivationEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_linux_upgrade_on_activation_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingTrendMicroXdrEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_trend_micro_xdr_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingActiveSessionsMaxExceededAction", skip_serializing_if = "Option::is_none")]
    pub platform_setting_active_sessions_max_exceeded_action: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUpdateHostnameOnIpChangeEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_update_hostname_on_ip_change_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "logInspectionSettingEventRankSeverityHigh", skip_serializing_if = "Option::is_none")]
    pub log_inspection_setting_event_rank_severity_high: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingSmtpRequiresAuthenticationEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_smtp_requires_authentication_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingActiveSessionsMax", skip_serializing_if = "Option::is_none")]
    pub platform_setting_active_sessions_max: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingAwsExternalIdRetrievalEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_aws_external_id_retrieval_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "logInspectionSettingEventRankSeverityLow", skip_serializing_if = "Option::is_none")]
    pub log_inspection_setting_event_rank_severity_low: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingSmtpUsername", skip_serializing_if = "Option::is_none")]
    pub platform_setting_smtp_username: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingEventForwardingSnsAdvancedConfigEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_event_forwarding_sns_advanced_config_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "firewallSettingInternetConnectivityTestInterval", skip_serializing_if = "Option::is_none")]
    pub firewall_setting_internet_connectivity_test_interval: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingWhoisUrl", skip_serializing_if = "Option::is_none")]
    pub platform_setting_whois_url: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingDdanSourceOption", skip_serializing_if = "Option::is_none")]
    pub platform_setting_ddan_source_option: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingConnectedThreatDefenseControlManagerSuspiciousObjectListComparisonEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_connected_threat_defense_control_manager_suspicious_object_list_comparison_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingExportedFileCharacterEncoding", skip_serializing_if = "Option::is_none")]
    pub platform_setting_exported_file_character_encoding: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUserSessionDurationMax", skip_serializing_if = "Option::is_none")]
    pub platform_setting_user_session_duration_max: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUpdateSoftwareAlternateUpdateServerUrls", skip_serializing_if = "Option::is_none")]
    pub platform_setting_update_software_alternate_update_server_urls: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingRetainCountersDuration", skip_serializing_if = "Option::is_none")]
    pub platform_setting_retain_counters_duration: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingSmartProtectionFeedbackInterval", skip_serializing_if = "Option::is_none")]
    pub platform_setting_smart_protection_feedback_interval: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingSystemEventForwardingSnmpAddress", skip_serializing_if = "Option::is_none")]
    pub platform_setting_system_event_forwarding_snmp_address: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingSmtpServerAddress", skip_serializing_if = "Option::is_none")]
    pub platform_setting_smtp_server_address: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingSmtpPassword", skip_serializing_if = "Option::is_none")]
    pub platform_setting_smtp_password: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingEventForwardingSnsConfigJson", skip_serializing_if = "Option::is_none")]
    pub platform_setting_event_forwarding_sns_config_json: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "firewallSettingRetainEventDuration", skip_serializing_if = "Option::is_none")]
    pub firewall_setting_retain_event_duration: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "webReputationSettingEventRankRiskUntested", skip_serializing_if = "Option::is_none")]
    pub web_reputation_setting_event_rank_risk_untested: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingManagedDetectResponseUseProxyEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_managed_detect_response_use_proxy_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingEventForwardingSnsSecretKey", skip_serializing_if = "Option::is_none")]
    pub platform_setting_event_forwarding_sns_secret_key: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingAwsManagerIdentitySecretKey", skip_serializing_if = "Option::is_none")]
    pub platform_setting_aws_manager_identity_secret_key: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "webReputationSettingEventRankRiskHighlySuspicious", skip_serializing_if = "Option::is_none")]
    pub web_reputation_setting_event_rank_risk_highly_suspicious: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUserPasswordExpirySendEmailEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_user_password_expiry_send_email_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingUserSignInAttemptsAllowedNumber", skip_serializing_if = "Option::is_none")]
    pub platform_setting_user_sign_in_attempts_allowed_number: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingDdanUseProxyEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_ddan_use_proxy_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingAgentInitiatedActivationEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_agent_initiated_activation_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingSmartProtectionFeedbackBandwidthMaxKbytes", skip_serializing_if = "Option::is_none")]
    pub platform_setting_smart_protection_feedback_bandwidth_max_kbytes: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "firewallSettingEventRankSeverityPacketRejection", skip_serializing_if = "Option::is_none")]
    pub firewall_setting_event_rank_severity_packet_rejection: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingManagedDetectResponseUsePrimaryTenantSettingsEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_managed_detect_response_use_primary_tenant_settings_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingEventForwardingSnsAccessKey", skip_serializing_if = "Option::is_none")]
    pub platform_setting_event_forwarding_sns_access_key: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingAgentInitiatedActivationSpecifyHostnameEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_agent_initiated_activation_specify_hostname_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingConnectedThreatDefensesUsePrimaryTenantServerSettingsEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_connected_threat_defenses_use_primary_tenant_server_settings_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingInactiveAgentCleanupDuration", skip_serializing_if = "Option::is_none")]
    pub platform_setting_inactive_agent_cleanup_duration: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingAgentInitiatedActivationDuplicateHostnameMode", skip_serializing_if = "Option::is_none")]
    pub platform_setting_agent_initiated_activation_duplicate_hostname_mode: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingAllowPacketDataCaptureInNetworkEvents", skip_serializing_if = "Option::is_none")]
    pub platform_setting_allow_packet_data_capture_in_network_events: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingAgentInitiatedActivationReactivateUnknownEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_agent_initiated_activation_reactivate_unknown_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingAgentInitiatedActivationPolicyId", skip_serializing_if = "Option::is_none")]
    pub platform_setting_agent_initiated_activation_policy_id: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingTrendMicroXdrApiServerUrl", skip_serializing_if = "Option::is_none")]
    pub platform_setting_trend_micro_xdr_api_server_url: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingRetainAgentInstallersPerPlatformMax", skip_serializing_if = "Option::is_none")]
    pub platform_setting_retain_agent_installers_per_platform_max: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "applicationControlSettingServeRulesetsFromRelaysEnabled", skip_serializing_if = "Option::is_none")]
    pub application_control_setting_serve_rulesets_from_relays_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "integrityMonitoringSettingEventRankSeverityHigh", skip_serializing_if = "Option::is_none")]
    pub integrity_monitoring_setting_event_rank_severity_high: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingSamlRetainInactiveExternalAdministratorsDuration", skip_serializing_if = "Option::is_none")]
    pub platform_setting_saml_retain_inactive_external_administrators_duration: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "intrusionPreventionSettingRetainEventDuration", skip_serializing_if = "Option::is_none")]
    pub intrusion_prevention_setting_retain_event_duration: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "firewallSettingInternetConnectivityTestUrl", skip_serializing_if = "Option::is_none")]
    pub firewall_setting_internet_connectivity_test_url: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingProxyAgentUpdateProxyId", skip_serializing_if = "Option::is_none")]
    pub platform_setting_proxy_agent_update_proxy_id: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingDdanAutoSubmissionEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_ddan_auto_submission_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingDdanManualSourceApiKey", skip_serializing_if = "Option::is_none")]
    pub platform_setting_ddan_manual_source_api_key: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "intrusionPreventionSettingEventRankSeverityFilterError", skip_serializing_if = "Option::is_none")]
    pub intrusion_prevention_setting_event_rank_severity_filter_error: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "intrusionPreventionSettingEventRankSeverityFilterHigh", skip_serializing_if = "Option::is_none")]
    pub intrusion_prevention_setting_event_rank_severity_filter_high: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingTrendMicroXdrApiKey", skip_serializing_if = "Option::is_none")]
    pub platform_setting_trend_micro_xdr_api_key: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingCloudOneWorkloadSecurityIocEnabled", skip_serializing_if = "Option::is_none")]
    pub platform_setting_cloud_one_workload_security_ioc_enabled: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "integrityMonitoringSettingEventRankSeverityLow", skip_serializing_if = "Option::is_none")]
    pub integrity_monitoring_setting_event_rank_severity_low: Option<Box<crate::models::SettingValue>>,
    #[serde(rename = "platformSettingTrendMicroXdrCompanyId", skip_serializing_if = "Option::is_none")]
    pub platform_setting_trend_micro_xdr_company_id: Option<Box<crate::models::SettingValue>>,
}

impl SystemSettings {
    pub fn new() -> SystemSettings {
        SystemSettings {
            platform_setting_saml_identity_provider_certificate_expiry_warning_days: None,
            platform_setting_update_agent_security_on_missing_deep_security_manager_enabled: None,
            platform_setting_ddan_manual_source_server_url: None,
            platform_setting_smart_protection_feedback_threat_detections_threshold: None,
            intrusion_prevention_setting_event_rank_severity_filter_medium: None,
            firewall_setting_intranet_connectivity_test_expected_content_regex: None,
            platform_setting_event_forwarding_sns_enabled: None,
            platform_setting_tenant_auto_revoke_impersonation_by_primary_tenant_timeout: None,
            web_reputation_setting_event_rank_risk_blocked_by_administrator_rank: None,
            anti_malware_setting_event_email_recipients: None,
            firewall_setting_intranet_connectivity_test_url: None,
            platform_setting_tenant_use_default_relay_group_from_primary_tenant_enabled: None,
            platform_setting_exported_diagnostic_package_locale: None,
            intrusion_prevention_setting_event_rank_severity_filter_critical: None,
            platform_setting_trend_micro_xdr_common_log_receiver_url: None,
            platform_setting_managed_detect_response_company_guid: None,
            platform_setting_alert_default_email_address: None,
            platform_setting_agent_initiated_activation_reactivate_cloned_enabled: None,
            platform_setting_managed_detect_response_server_url: None,
            platform_setting_syslog_config_id: None,
            platform_setting_smtp_start_tls_enabled: None,
            platform_setting_user_password_require_letters_and_numbers_enabled: None,
            platform_setting_managed_detect_response_enabled: None,
            platform_setting_update_rules_policy_auto_apply_enabled: None,
            platform_setting_user_password_require_not_same_as_username_enabled: None,
            log_inspection_setting_event_rank_severity_medium: None,
            anti_malware_setting_retain_event_duration: None,
            platform_setting_update_agent_security_contact_primary_source_on_missing_relay_enabled: None,
            firewall_setting_event_rank_severity_log_only: None,
            application_control_setting_retain_event_duration: None,
            platform_setting_windows_upgrade_on_activation_enabled: None,
            platform_setting_system_event_forwarding_snmp_port: None,
            firewall_setting_event_rank_severity_deny: None,
            intrusion_prevention_setting_event_rank_severity_filter_low: None,
            platform_setting_managed_detect_response_service_token: None,
            platform_setting_trend_micro_xdr_api_user: None,
            log_inspection_setting_retain_event_duration: None,
            platform_setting_tenant_auto_revoke_impersonation_by_primary_tenant_enabled: None,
            anti_malware_setting_event_email_body_template: None,
            platform_setting_retain_security_updates_max: None,
            platform_setting_connected_threat_defense_control_manager_source_option: None,
            anti_malware_setting_event_email_enabled: None,
            platform_setting_recommendation_ongoing_scans_enabled: None,
            platform_setting_user_password_length_min: None,
            platform_setting_aws_manager_identity_use_instance_role_enabled: None,
            platform_setting_alert_agent_update_pending_threshold: None,
            platform_setting_user_password_require_special_characters_enabled: None,
            platform_setting_update_appliance_default_agent_version: None,
            platform_setting_system_event_forwarding_snmp_enabled: None,
            platform_setting_smtp_bounce_email_address: None,
            platform_setting_update_relay_security_support_agent9_and_earlier_enabled: None,
            platform_setting_managed_detect_response_proxy_id: None,
            platform_setting_trend_micro_xdr_log_server_url: None,
            platform_setting_inactive_agent_cleanup_enabled: None,
            platform_setting_user_session_idle_timeout: None,
            anti_malware_setting_event_email_subject: None,
            platform_setting_connected_threat_defense_control_manager_use_proxy_enabled: None,
            platform_setting_aws_manager_identity_access_key: None,
            platform_setting_connected_threat_defense_control_manager_proxy_id: None,
            platform_setting_trend_micro_xdr_registration_state: None,
            platform_setting_tenant_allow_impersonation_by_primary_tenant_enabled: None,
            platform_setting_connected_threat_defense_control_manager_manual_source_server_url: None,
            platform_setting_user_password_require_mixed_case_enabled: None,
            platform_setting_trend_micro_xdr_identity_provider_api_url: None,
            platform_setting_smart_protection_feedback_for_suspicious_file_enabled: None,
            platform_setting_smart_protection_feedback_industry_type: None,
            web_reputation_setting_retain_event_duration: None,
            platform_setting_enable_agent_auto_detect_os_proxy: None,
            integrity_monitoring_setting_event_rank_severity_medium: None,
            platform_setting_vision_one_threat_intelligence_enabled: None,
            platform_setting_update_relay_security_all_regions_patterns_download_enabled: None,
            platform_setting_ddan_submission_enabled: None,
            web_reputation_setting_event_rank_risk_suspicious: None,
            integrity_monitoring_setting_event_rank_severity_critical: None,
            platform_setting_smtp_from_email_address: None,
            firewall_setting_global_stateful_config_id: None,
            platform_setting_event_forwarding_sns_topic_arn: None,
            firewall_setting_internet_connectivity_test_expected_content_regex: None,
            platform_setting_connected_threat_defense_control_manager_manual_source_api_key: None,
            platform_setting_update_security_primary_source_mode: None,
            web_reputation_setting_event_rank_risk_dangerous: None,
            platform_setting_user_hide_unlicensed_modules_enabled: None,
            platform_setting_capture_encrypted_traffic_enabled: None,
            platform_setting_retain_system_event_duration: None,
            platform_setting_user_password_expiry: None,
            platform_setting_smart_protection_feedback_enabled: None,
            integrity_monitoring_setting_retain_event_duration: None,
            log_inspection_setting_event_rank_severity_critical: None,
            platform_setting_ddan_proxy_id: None,
            platform_setting_agent_initiated_activation_within_ip_list_id: None,
            platform_setting_update_security_primary_source_url: None,
            platform_setting_agentless_vcloud_protection_enabled: None,
            platform_setting_linux_upgrade_on_activation_enabled: None,
            platform_setting_trend_micro_xdr_enabled: None,
            platform_setting_active_sessions_max_exceeded_action: None,
            platform_setting_update_hostname_on_ip_change_enabled: None,
            log_inspection_setting_event_rank_severity_high: None,
            platform_setting_smtp_requires_authentication_enabled: None,
            platform_setting_active_sessions_max: None,
            platform_setting_aws_external_id_retrieval_enabled: None,
            log_inspection_setting_event_rank_severity_low: None,
            platform_setting_smtp_username: None,
            platform_setting_event_forwarding_sns_advanced_config_enabled: None,
            firewall_setting_internet_connectivity_test_interval: None,
            platform_setting_whois_url: None,
            platform_setting_ddan_source_option: None,
            platform_setting_connected_threat_defense_control_manager_suspicious_object_list_comparison_enabled: None,
            platform_setting_exported_file_character_encoding: None,
            platform_setting_user_session_duration_max: None,
            platform_setting_update_software_alternate_update_server_urls: None,
            platform_setting_retain_counters_duration: None,
            platform_setting_smart_protection_feedback_interval: None,
            platform_setting_system_event_forwarding_snmp_address: None,
            platform_setting_smtp_server_address: None,
            platform_setting_smtp_password: None,
            platform_setting_event_forwarding_sns_config_json: None,
            firewall_setting_retain_event_duration: None,
            web_reputation_setting_event_rank_risk_untested: None,
            platform_setting_managed_detect_response_use_proxy_enabled: None,
            platform_setting_event_forwarding_sns_secret_key: None,
            platform_setting_aws_manager_identity_secret_key: None,
            web_reputation_setting_event_rank_risk_highly_suspicious: None,
            platform_setting_user_password_expiry_send_email_enabled: None,
            platform_setting_user_sign_in_attempts_allowed_number: None,
            platform_setting_ddan_use_proxy_enabled: None,
            platform_setting_agent_initiated_activation_enabled: None,
            platform_setting_smart_protection_feedback_bandwidth_max_kbytes: None,
            firewall_setting_event_rank_severity_packet_rejection: None,
            platform_setting_managed_detect_response_use_primary_tenant_settings_enabled: None,
            platform_setting_event_forwarding_sns_access_key: None,
            platform_setting_agent_initiated_activation_specify_hostname_enabled: None,
            platform_setting_connected_threat_defenses_use_primary_tenant_server_settings_enabled: None,
            platform_setting_inactive_agent_cleanup_duration: None,
            platform_setting_agent_initiated_activation_duplicate_hostname_mode: None,
            platform_setting_allow_packet_data_capture_in_network_events: None,
            platform_setting_agent_initiated_activation_reactivate_unknown_enabled: None,
            platform_setting_agent_initiated_activation_policy_id: None,
            platform_setting_trend_micro_xdr_api_server_url: None,
            platform_setting_retain_agent_installers_per_platform_max: None,
            application_control_setting_serve_rulesets_from_relays_enabled: None,
            integrity_monitoring_setting_event_rank_severity_high: None,
            platform_setting_saml_retain_inactive_external_administrators_duration: None,
            intrusion_prevention_setting_retain_event_duration: None,
            firewall_setting_internet_connectivity_test_url: None,
            platform_setting_proxy_agent_update_proxy_id: None,
            platform_setting_ddan_auto_submission_enabled: None,
            platform_setting_ddan_manual_source_api_key: None,
            intrusion_prevention_setting_event_rank_severity_filter_error: None,
            intrusion_prevention_setting_event_rank_severity_filter_high: None,
            platform_setting_trend_micro_xdr_api_key: None,
            platform_setting_cloud_one_workload_security_ioc_enabled: None,
            integrity_monitoring_setting_event_rank_severity_low: None,
            platform_setting_trend_micro_xdr_company_id: None,
        }
    }
}


