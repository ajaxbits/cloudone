/*
 * Trend Micro Workload Security API
 *
 * Copyright 2018 - 2022 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Workload Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Workload Security into your CI/CD pipeline.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 50.0.827
 *
 * Generated by: https://openapi-generator.tech
 */

/// HostedServiceRights : Hosted service rights details.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct HostedServiceRights {
    #[serde(rename = "accountRights", skip_serializing_if = "Option::is_none")]
    pub account_rights: Option<Box<crate::models::AccountRights>>,
    #[serde(rename = "fixRights", skip_serializing_if = "Option::is_none")]
    pub fix_rights: Option<Box<crate::models::FixRights>>,
    #[serde(rename = "heapRights", skip_serializing_if = "Option::is_none")]
    pub heap_rights: Option<Box<crate::models::HeapRights>>,
    #[serde(rename = "licenseRateRights", skip_serializing_if = "Option::is_none")]
    pub license_rate_rights: Option<Box<crate::models::LicenseRateRights>>,
    #[serde(rename = "queryRights", skip_serializing_if = "Option::is_none")]
    pub query_rights: Option<Box<crate::models::QueryRights>>,
    #[serde(rename = "featureFlagsRights", skip_serializing_if = "Option::is_none")]
    pub feature_flags_rights: Option<Box<crate::models::FeatureFlagsRights>>,
    #[serde(
        rename = "queryTracebackRights",
        skip_serializing_if = "Option::is_none"
    )]
    pub query_traceback_rights: Option<Box<crate::models::QueryTracebackRights>>,
    #[serde(rename = "serverLogRights", skip_serializing_if = "Option::is_none")]
    pub server_log_rights: Option<Box<crate::models::ServerLogRights>>,
    #[serde(rename = "stackTraceRights", skip_serializing_if = "Option::is_none")]
    pub stack_trace_rights: Option<Box<crate::models::StackTraceRights>>,
    #[serde(
        rename = "networkSecurityRights",
        skip_serializing_if = "Option::is_none"
    )]
    pub network_security_rights: Option<Box<crate::models::NetworkSecurityRights>>,
}

impl HostedServiceRights {
    /// Hosted service rights details.
    pub fn new() -> HostedServiceRights {
        HostedServiceRights {
            account_rights: None,
            fix_rights: None,
            heap_rights: None,
            license_rate_rights: None,
            query_rights: None,
            feature_flags_rights: None,
            query_traceback_rights: None,
            server_log_rights: None,
            stack_trace_rights: None,
            network_security_rights: None,
        }
    }
}
