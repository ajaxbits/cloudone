/*
 * Trend Micro Workload Security API
 *
 * Copyright 2018 - 2022 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Workload Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Workload Security into your CI/CD pipeline.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 50.0.827
 * 
 * Generated by: https://openapi-generator.tech
 */

/// MonthlyScheduleParameters : Details for a monthly schedule for a scheduled task.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct MonthlyScheduleParameters {
    /// Date/Time when the task should run.
    #[serde(rename = "startTime", skip_serializing_if = "Option::is_none")]
    pub start_time: Option<i64>,
    /// Frequency type.
    #[serde(rename = "frequencyType", skip_serializing_if = "Option::is_none")]
    pub frequency_type: Option<FrequencyType>,
    /// Specific day of month for frequency type: day-of-month.
    #[serde(rename = "dayOfMonth", skip_serializing_if = "Option::is_none")]
    pub day_of_month: Option<i32>,
    /// Specific week of month for frequency type: custom.
    #[serde(rename = "weekOfMonth", skip_serializing_if = "Option::is_none")]
    pub week_of_month: Option<WeekOfMonth>,
    /// Specific day of week for frequency type: custom.
    #[serde(rename = "dayOfWeek", skip_serializing_if = "Option::is_none")]
    pub day_of_week: Option<DayOfWeek>,
    /// Months of the year when the scheduled task will run.
    #[serde(rename = "months", skip_serializing_if = "Option::is_none")]
    pub months: Option<Vec<Months>>,
}

impl MonthlyScheduleParameters {
    /// Details for a monthly schedule for a scheduled task.
    pub fn new() -> MonthlyScheduleParameters {
        MonthlyScheduleParameters {
            start_time: None,
            frequency_type: None,
            day_of_month: None,
            week_of_month: None,
            day_of_week: None,
            months: None,
        }
    }
}

/// Frequency type.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum FrequencyType {
    #[serde(rename = "day-of-month")]
    DayOfMonth,
    #[serde(rename = "last-day-of-month")]
    LastDayOfMonth,
    #[serde(rename = "custom")]
    Custom,
}
/// Specific week of month for frequency type: custom.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum WeekOfMonth {
    #[serde(rename = "first")]
    First,
    #[serde(rename = "second")]
    Second,
    #[serde(rename = "third")]
    Third,
    #[serde(rename = "fourth")]
    Fourth,
    #[serde(rename = "last")]
    Last,
}
/// Specific day of week for frequency type: custom.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DayOfWeek {
    #[serde(rename = "sunday")]
    Sunday,
    #[serde(rename = "monday")]
    Monday,
    #[serde(rename = "tuesday")]
    Tuesday,
    #[serde(rename = "wednesday")]
    Wednesday,
    #[serde(rename = "thursday")]
    Thursday,
    #[serde(rename = "friday")]
    Friday,
    #[serde(rename = "saturday")]
    Saturday,
}
/// Months of the year when the scheduled task will run.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Months {
    #[serde(rename = "january")]
    January,
    #[serde(rename = "feburary")]
    Feburary,
    #[serde(rename = "march")]
    March,
    #[serde(rename = "april")]
    April,
    #[serde(rename = "may")]
    May,
    #[serde(rename = "june")]
    June,
    #[serde(rename = "july")]
    July,
    #[serde(rename = "august")]
    August,
    #[serde(rename = "september")]
    September,
    #[serde(rename = "october")]
    October,
    #[serde(rename = "november")]
    November,
    #[serde(rename = "december")]
    December,
}

