/*
 * Trend Micro Workload Security API
 *
 * Copyright 2018 - 2022 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Workload Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Workload Security into your CI/CD pipeline.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 50.0.827
 *
 * Generated by: https://openapi-generator.tech
 */

/// ApplicationType : Application Types are useful for grouping intrusion prevention rules that have a common purpose.

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ApplicationType {
    /// Display name of the ApplicationType. Searchable as String.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Description of the ApplicationType. Searchable as String.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Version of the Deep Security agent or appliance required to support the ApplicationType. Searchable as String.
    #[serde(
        rename = "minimumAgentVersion",
        skip_serializing_if = "Option::is_none"
    )]
    pub minimum_agent_version: Option<String>,
    /// Direction of the initial communication for the ApplicationType (e.g. 'outgoing' for web browsers). Searchable as Choice.
    #[serde(rename = "direction", skip_serializing_if = "Option::is_none")]
    pub direction: Option<Direction>,
    /// Protocol used by the ApplicationType. Searchable as Choice.
    #[serde(rename = "protocol", skip_serializing_if = "Option::is_none")]
    pub protocol: Option<Protocol>,
    /// Port number configuration type. Searchable as Choice.
    #[serde(rename = "portType", skip_serializing_if = "Option::is_none")]
    pub port_type: Option<PortType>,
    /// If portType is multiple, the list of port numbers the ApplicationType monitors. Searchable as String.
    #[serde(rename = "portMultiple", skip_serializing_if = "Option::is_none")]
    pub port_multiple: Option<Vec<String>>,
    /// If portType is port-list, ID of the PortList containing the port numbers the ApplicationType monitors. Set to 0 to remove any assignment. Searchable as Numeric.
    #[serde(rename = "portListID", skip_serializing_if = "Option::is_none")]
    pub port_list_id: Option<i32>,
    /// Indicates whether recommendation scans consider the ApplicationType. Create an ApplicationType computer or policy override to modify this value. Searchable as Choice.
    #[serde(
        rename = "recommendationsMode",
        skip_serializing_if = "Option::is_none"
    )]
    pub recommendations_mode: Option<RecommendationsMode>,
    /// ID of the ApplicationType. Searchable as ID.
    #[serde(rename = "ID", skip_serializing_if = "Option::is_none")]
    pub ID: Option<i32>,
}

impl ApplicationType {
    /// Application Types are useful for grouping intrusion prevention rules that have a common purpose.
    pub fn new() -> ApplicationType {
        ApplicationType {
            name: None,
            description: None,
            minimum_agent_version: None,
            direction: None,
            protocol: None,
            port_type: None,
            port_multiple: None,
            port_list_id: None,
            recommendations_mode: None,
            ID: None,
        }
    }
}

/// Direction of the initial communication for the ApplicationType (e.g. 'outgoing' for web browsers). Searchable as Choice.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Direction {
    #[serde(rename = "incoming")]
    Incoming,
    #[serde(rename = "outgoing")]
    Outgoing,
}
/// Protocol used by the ApplicationType. Searchable as Choice.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Protocol {
    #[serde(rename = "icmp")]
    Icmp,
    #[serde(rename = "tcp")]
    Tcp,
    #[serde(rename = "udp")]
    Udp,
    #[serde(rename = "tcp-udp")]
    TcpUdp,
}
/// Port number configuration type. Searchable as Choice.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PortType {
    #[serde(rename = "any")]
    Any,
    #[serde(rename = "multiple")]
    Multiple,
    #[serde(rename = "port-list")]
    PortList,
}
/// Indicates whether recommendation scans consider the ApplicationType. Create an ApplicationType computer or policy override to modify this value. Searchable as Choice.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RecommendationsMode {
    #[serde(rename = "enabled")]
    Enabled,
    #[serde(rename = "ignored")]
    Ignored,
    #[serde(rename = "unknown")]
    Unknown,
    #[serde(rename = "disabled")]
    Disabled,
}
