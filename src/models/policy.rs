/*
 * Trend Micro Workload Security API
 *
 * Copyright 2018 - 2022 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Workload Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Workload Security into your CI/CD pipeline.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 50.0.827
 *
 * Generated by: https://openapi-generator.tech
 */

/// Policy : Policy details

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Policy {
    /// ID of the parent policy. Searchable as Numeric.
    #[serde(rename = "parentID", skip_serializing_if = "Option::is_none")]
    pub parent_id: Option<i32>,
    /// Name of the policy. Searchable as String.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Description of the policy. Searchable as String.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "policySettings", skip_serializing_if = "Option::is_none")]
    pub policy_settings: Option<Box<crate::models::PolicySettings>>,
    /// Enable or disable ongoing recommendation scans for computers assigned this policy. Searchable as Choice.
    #[serde(
        rename = "recommendationScanMode",
        skip_serializing_if = "Option::is_none"
    )]
    pub recommendation_scan_mode: Option<RecommendationScanMode>,
    /// Automatically update computers assigned this policy when the configuration changes. Searchable as Choice.
    #[serde(rename = "autoRequiresUpdate", skip_serializing_if = "Option::is_none")]
    pub auto_requires_update: Option<AutoRequiresUpdate>,
    #[serde(rename = "interfaceTypes", skip_serializing_if = "Option::is_none")]
    pub interface_types: Option<Box<crate::models::InterfaceTypes>>,
    /// ID of the policy. Searchable as ID.
    #[serde(rename = "ID", skip_serializing_if = "Option::is_none")]
    pub ID: Option<i32>,
    #[serde(rename = "antiMalware", skip_serializing_if = "Option::is_none")]
    pub anti_malware: Option<Box<crate::models::AntiMalwarePolicyExtension>>,
    #[serde(rename = "webReputation", skip_serializing_if = "Option::is_none")]
    pub web_reputation: Option<Box<crate::models::WebReputationPolicyExtension>>,
    #[serde(rename = "activityMonitoring", skip_serializing_if = "Option::is_none")]
    pub activity_monitoring: Option<Box<crate::models::ActivityMonitoringPolicyExtension>>,
    #[serde(rename = "firewall", skip_serializing_if = "Option::is_none")]
    pub firewall: Option<Box<crate::models::FirewallPolicyExtension>>,
    #[serde(
        rename = "intrusionPrevention",
        skip_serializing_if = "Option::is_none"
    )]
    pub intrusion_prevention: Option<Box<crate::models::IntrusionPreventionPolicyExtension>>,
    #[serde(
        rename = "integrityMonitoring",
        skip_serializing_if = "Option::is_none"
    )]
    pub integrity_monitoring: Option<Box<crate::models::IntegrityMonitoringPolicyExtension>>,
    #[serde(rename = "logInspection", skip_serializing_if = "Option::is_none")]
    pub log_inspection: Option<Box<crate::models::LogInspectionPolicyExtension>>,
    #[serde(rename = "applicationControl", skip_serializing_if = "Option::is_none")]
    pub application_control: Option<Box<crate::models::ApplicationControlPolicyExtension>>,
    #[serde(rename = "SAP", skip_serializing_if = "Option::is_none")]
    pub SAP: Option<Box<crate::models::SapPolicyExtension>>,
}

impl Policy {
    /// Policy details
    pub fn new() -> Policy {
        Policy {
            parent_id: None,
            name: None,
            description: None,
            policy_settings: None,
            recommendation_scan_mode: None,
            auto_requires_update: None,
            interface_types: None,
            ID: None,
            anti_malware: None,
            web_reputation: None,
            activity_monitoring: None,
            firewall: None,
            intrusion_prevention: None,
            integrity_monitoring: None,
            log_inspection: None,
            application_control: None,
            SAP: None,
        }
    }
}

/// Enable or disable ongoing recommendation scans for computers assigned this policy. Searchable as Choice.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RecommendationScanMode {
    #[serde(rename = "off")]
    Off,
    #[serde(rename = "ongoing")]
    Ongoing,
}
/// Automatically update computers assigned this policy when the configuration changes. Searchable as Choice.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum AutoRequiresUpdate {
    #[serde(rename = "off")]
    Off,
    #[serde(rename = "on")]
    On,
}
