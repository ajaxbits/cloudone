/*
 * Trend Micro Workload Security API
 *
 * Copyright 2018 - 2022 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Workload Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Workload Security into your CI/CD pipeline.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 50.0.827
 * 
 * Generated by: https://openapi-generator.tech
 */

/// PlatformRights : Platform rights details.



#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct PlatformRights {
    #[serde(rename = "administratorRights", skip_serializing_if = "Option::is_none")]
    pub administrator_rights: Option<Box<crate::models::AdministratorRights>>,
    #[serde(rename = "administratorRoleRights", skip_serializing_if = "Option::is_none")]
    pub administrator_role_rights: Option<Box<crate::models::AdministratorRoleRights>>,
    #[serde(rename = "agentVersionControlRights", skip_serializing_if = "Option::is_none")]
    pub agent_version_control_rights: Option<Box<crate::models::AgentVersionControlRights>>,
    #[serde(rename = "alertConfigurationRights", skip_serializing_if = "Option::is_none")]
    pub alert_configuration_rights: Option<Box<crate::models::AlertConfigurationRights>>,
    #[serde(rename = "alertRights", skip_serializing_if = "Option::is_none")]
    pub alert_rights: Option<Box<crate::models::AlertRights>>,
    #[serde(rename = "certificateRights", skip_serializing_if = "Option::is_none")]
    pub certificate_rights: Option<Box<crate::models::CertificateRights>>,
    #[serde(rename = "computerRights", skip_serializing_if = "Option::is_none")]
    pub computer_rights: Option<Box<crate::models::ComputerRights>>,
    #[serde(rename = "contactRights", skip_serializing_if = "Option::is_none")]
    pub contact_rights: Option<Box<crate::models::ContactRights>>,
    #[serde(rename = "dataCenterGatewayRights", skip_serializing_if = "Option::is_none")]
    pub data_center_gateway_rights: Option<Box<crate::models::DataCenterGatewayRights>>,
    #[serde(rename = "diagnosticRights", skip_serializing_if = "Option::is_none")]
    pub diagnostic_rights: Option<Box<crate::models::DiagnosticRights>>,
    #[serde(rename = "assetValueRights", skip_serializing_if = "Option::is_none")]
    pub asset_value_rights: Option<Box<crate::models::AssetValueRights>>,
    #[serde(rename = "licenseRights", skip_serializing_if = "Option::is_none")]
    pub license_rights: Option<Box<crate::models::LicenseRights>>,
    #[serde(rename = "multiTenantRights", skip_serializing_if = "Option::is_none")]
    pub multi_tenant_rights: Option<Box<crate::models::MultiTenantRights>>,
    #[serde(rename = "policyRights", skip_serializing_if = "Option::is_none")]
    pub policy_rights: Option<Box<crate::models::PolicyRights>>,
    #[serde(rename = "portListRights", skip_serializing_if = "Option::is_none")]
    pub port_list_rights: Option<Box<crate::models::PortListRights>>,
    #[serde(rename = "proxyRights", skip_serializing_if = "Option::is_none")]
    pub proxy_rights: Option<Box<crate::models::ProxyRights>>,
    #[serde(rename = "relayGroupRights", skip_serializing_if = "Option::is_none")]
    pub relay_group_rights: Option<Box<crate::models::RelayGroupRights>>,
    #[serde(rename = "scanCacheRights", skip_serializing_if = "Option::is_none")]
    pub scan_cache_rights: Option<Box<crate::models::ScanCacheRights>>,
    #[serde(rename = "scheduledTaskRights", skip_serializing_if = "Option::is_none")]
    pub scheduled_task_rights: Option<Box<crate::models::ScheduledTaskRights>>,
    #[serde(rename = "scheduleRights", skip_serializing_if = "Option::is_none")]
    pub schedule_rights: Option<Box<crate::models::ScheduleRights>>,
    #[serde(rename = "settingRights", skip_serializing_if = "Option::is_none")]
    pub setting_rights: Option<Box<crate::models::SettingRights>>,
    #[serde(rename = "expertSettingRights", skip_serializing_if = "Option::is_none")]
    pub expert_setting_rights: Option<Box<crate::models::ExpertSettingRights>>,
    #[serde(rename = "syslogConfigurationRights", skip_serializing_if = "Option::is_none")]
    pub syslog_configuration_rights: Option<Box<crate::models::SyslogConfigurationRights>>,
    #[serde(rename = "systemInformationRights", skip_serializing_if = "Option::is_none")]
    pub system_information_rights: Option<Box<crate::models::SystemInformationRights>>,
    #[serde(rename = "taggingRights", skip_serializing_if = "Option::is_none")]
    pub tagging_rights: Option<Box<crate::models::TaggingRights>>,
    #[serde(rename = "updateRights", skip_serializing_if = "Option::is_none")]
    pub update_rights: Option<Box<crate::models::UpdateRights>>,
    #[serde(rename = "apikeyRights", skip_serializing_if = "Option::is_none")]
    pub apikey_rights: Option<Box<crate::models::ApiKeyRights>>,
    #[serde(rename = "iplistRights", skip_serializing_if = "Option::is_none")]
    pub iplist_rights: Option<Box<crate::models::IpListRights>>,
    #[serde(rename = "samlidentityProviderRights", skip_serializing_if = "Option::is_none")]
    pub samlidentity_provider_rights: Option<Box<crate::models::SamlIdentityProviderRights>>,
}

impl PlatformRights {
    /// Platform rights details.
    pub fn new() -> PlatformRights {
        PlatformRights {
            administrator_rights: None,
            administrator_role_rights: None,
            agent_version_control_rights: None,
            alert_configuration_rights: None,
            alert_rights: None,
            certificate_rights: None,
            computer_rights: None,
            contact_rights: None,
            data_center_gateway_rights: None,
            diagnostic_rights: None,
            asset_value_rights: None,
            license_rights: None,
            multi_tenant_rights: None,
            policy_rights: None,
            port_list_rights: None,
            proxy_rights: None,
            relay_group_rights: None,
            scan_cache_rights: None,
            scheduled_task_rights: None,
            schedule_rights: None,
            setting_rights: None,
            expert_setting_rights: None,
            syslog_configuration_rights: None,
            system_information_rights: None,
            tagging_rights: None,
            update_rights: None,
            apikey_rights: None,
            iplist_rights: None,
            samlidentity_provider_rights: None,
        }
    }
}


