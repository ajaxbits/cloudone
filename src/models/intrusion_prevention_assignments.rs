/*
 * Trend Micro Workload Security API
 *
 * Copyright 2018 - 2022 Trend Micro Incorporated.<br/>Get protected, stay secured, and keep informed with Trend Micro Workload Security's new RESTful API. Access system data and manage security configurations to automate your security workflows and integrate Workload Security into your CI/CD pipeline.  # Authentication  <!-- ReDoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 50.0.827
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IntrusionPreventionAssignments {
    /// IDs of the intrusion prevention rules currently assigned.
    #[serde(rename = "assignedRuleIDs", skip_serializing_if = "Option::is_none")]
    pub assigned_rule_ids: Option<Vec<i32>>,
    /// IDs of the application types currently assigned.
    #[serde(
        rename = "assignedApplicationTypeIDs",
        skip_serializing_if = "Option::is_none"
    )]
    pub assigned_application_type_ids: Option<Vec<i32>>,
    /// Status of the last recommendation scan.
    #[serde(
        rename = "recommendationScanStatus",
        skip_serializing_if = "Option::is_none"
    )]
    pub recommendation_scan_status: Option<RecommendationScanStatus>,
    /// Timestamp of the last recommendation scan, in milliseconds since epoch.
    #[serde(
        rename = "lastRecommendationScanDate",
        skip_serializing_if = "Option::is_none"
    )]
    pub last_recommendation_scan_date: Option<i64>,
    /// IDs of the intrusion prevention rules recommended for assignment.
    #[serde(
        rename = "recommendedToAssignRuleIDs",
        skip_serializing_if = "Option::is_none"
    )]
    pub recommended_to_assign_rule_ids: Option<Vec<i32>>,
    /// IDs of the intrusion prevention rules recommended for unassignment.
    #[serde(
        rename = "recommendedToUnassignRuleIDs",
        skip_serializing_if = "Option::is_none"
    )]
    pub recommended_to_unassign_rule_ids: Option<Vec<i32>>,
}

impl IntrusionPreventionAssignments {
    pub fn new() -> IntrusionPreventionAssignments {
        IntrusionPreventionAssignments {
            assigned_rule_ids: None,
            assigned_application_type_ids: None,
            recommendation_scan_status: None,
            last_recommendation_scan_date: None,
            recommended_to_assign_rule_ids: None,
            recommended_to_unassign_rule_ids: None,
        }
    }
}

/// Status of the last recommendation scan.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RecommendationScanStatus {
    #[serde(rename = "none")]
    None,
    #[serde(rename = "valid")]
    Valid,
    #[serde(rename = "out-of-date")]
    OutOfDate,
    #[serde(rename = "unknown")]
    Unknown,
}
